local ReplicatedStorage = game:GetService("ReplicatedStorage")
local raw_src = "https://raw.githubusercontent.com/SeasonalKirito/Iris-Exploit-Port/refs/heads/main/src/"

if ReplicatedStorage:FindFirstChild("Iris") then
    print("Iris already exists, destroying")
    ReplicatedStorage.Iris:Destroy()
end

local Iris = Instance.new("ModuleScript")
Iris.Name = "Iris"
Iris.Source = game:HttpGet(raw_src.."Iris.lua")
Iris.Parent = ReplicatedStorage
print("Iris has been loaded")

local API = Instance.new("ModuleScript")
API.Name = "API"
API.Source = game:HttpGet(raw_src.."API.lua")
API.Parent = Iris
print("API has been loaded")

local config = Instance.new("ModuleScript")
config.Name = "config"
config.Source = game:HttpGet(raw_src.."config.lua")
config.Parent = Iris
print("config has been loaded")

local demoWindow = Instance.new("ModuleScript")
demoWindow.Name = "demoWindow"
demoWindow.Source = game:HttpGet(raw_src.."demoWindow.lua")
demoWindow.Parent = Iris
print("demoWindow has been loaded")

local Internal = Instance.new("ModuleScript")
Internal.Name = "Internal"
Internal.Source = game:HttpGet(raw_src.."Internal.lua")
Internal.Parent = Iris
print("Internal has been loaded")

local Types = Instance.new("ModuleScript")
Types.Name = "Types"
Types.Source = game:HttpGet(raw_src.."Types.lua")
Types.Parent = Iris
print("Types has been loaded")

local widgets = Instance.new("ModuleScript")
widgets.Name = "widgets"
widgets.Source = game:HttpGet(raw_src.."widgets.lua")
widgets.Parent = Iris
print("widgets has been loaded")

-- Widgets Folder

local Button = Instance.new("ModuleScript")
Button.Name = "Button"
Button.Source = game:HttpGet(raw_src.."widgets/Button.lua")
Button.Parent = widgets
print("Button has been loaded")

local CheckBox = Instance.new("ModuleScript")
CheckBox.Name = "CheckBox"
CheckBox.Source = game:HttpGet(raw_src.."widgets/CheckBox.lua")
CheckBox.Parent = widgets
print("CheckBox has been loaded")

local Combo = Instance.new("ModuleScript")
Combo.Name = "Combo"
Combo.Source = game:HttpGet(raw_src.."widgets/Combo.lua")
Combo.Parent = widgets
print("Combo has been loaded")

local Format = Instance.new("ModuleScript")
Format.Name = "Format"
Format.Source = game:HttpGet(raw_src.."widgets/Format.lua")
Format.Parent = widgets
print("Format has been loaded")

local Image = Instance.new("ModuleScript")
Image.Name = "Image"
Image.Source = game:HttpGet(raw_src.."widgets/Image.lua")
Image.Parent = widgets
print("Image has been loaded")

local Input = Instance.new("ModuleScript")
Input.Name = "Input"
Input.Source = game:HttpGet(raw_src.."widgets/Input.lua")
Input.Parent = widgets
print("Input has been loaded")

local Menu = Instance.new("ModuleScript")
Menu.Name = "Menu"
Menu.Source = game:HttpGet(raw_src.."widgets/Menu.lua")
Menu.Parent = widgets
print("Menu has been loaded")

local Plot = Instance.new("ModuleScript")
Plot.Name = "Plot"
Plot.Source = game:HttpGet(raw_src.."widgets/Plot.lua")
Plot.Parent = widgets
print("Plot has been loaded")

local RadioButton = Instance.new("ModuleScript")
RadioButton.Name = "RadioButton"
RadioButton.Source = game:HttpGet(raw_src.."widgets/RadioButton.lua")
RadioButton.Parent = widgets
print("RadioButton has been loaded")

local Root = Instance.new("ModuleScript")   
Root.Name = "Root"
Root.Source = game:HttpGet(raw_src.."widgets/Root.lua")
Root.Parent = widgets
print("Root has been loaded")

local Table = Instance.new("ModuleScript")
Table.Name = "Table"
Table.Source = game:HttpGet(raw_src.."widgets/Table.lua")
Table.Parent = widgets
print("Table has been loaded")

local Text = Instance.new("ModuleScript")
Text.Name = "Text"
Text.Source = game:HttpGet(raw_src.."widgets/Text.lua")
Text.Parent = widgets
print("Text has been loaded")

local Tree = Instance.new("ModuleScript")
Tree.Name = "Tree"
Tree.Source = game:HttpGet(raw_src.."widgets/Tree.lua")
Tree.Parent = widgets
print("Tree has been loaded")

local Window = Instance.new("ModuleScript")
Window.Name = "Window"
Window.Source = game:HttpGet(raw_src.."widgets/Window.lua")
Window.Parent = widgets
print("Window has been loaded")